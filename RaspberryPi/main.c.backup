#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <stdbool.h>
#include <string.h>
#include <fcntl.h>
#include <unistd.h>

#define START_BYTE  0xCC
#define END_BYTE    0xCE

static const char* serialName = "/dev/serial0";
static uint8_t rxBuf[16] = {0};
static uint8_t txBuf[] = "dupa from C rpi\n\r";

int main(void)
{
  printf("Start\n");

  int fd = open(serialName, O_RDWR | O_NOCTTY | O_NDELAY);
  if (fd < 0)
  {
    printf("Error opening device: %s\n", serialName);
    return 0;
  }

  // This is working
  // int bytesWrite = write(fd, txBuf, sizeof(txBuf));
  // printf("Bytes write count: %d\n", bytesWrite);

  fcntl(fd, F_SETFL, 0);
  

  char c = -1;
  int bytesRead = 0;
  int totalBytesRead = 0;
  uint8_t *p = rxBuf;

  do
  {
    bytesRead = read(fd, p, 1);
    if (bytesRead > 0 && *p == '\r')
    {
      printf("%s", rxBuf);
      memset(rxBuf, 0, sizeof(rxBuf));
      p = rxBuf;
    }
    else
    {
      p += bytesRead;
    }
  } while (1);
  // } while (*(p - 1) != '\r');

  // printf("Bytes read count: %d\n", totalBytesRead);
  // printf("Data read: %s\n", rxBuf);

  close(fd);

	return 0;
}

